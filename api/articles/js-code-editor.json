{"title":"Code Editor","uid":"d6857a020c2a18887ebb33b9a47ceff4","slug":"js-code-editor","date":"2020-11-25T06:40:23.000Z","updated":"2023-01-12T09:50:07.540Z","comments":true,"path":"api/articles/js-code-editor.json","keywords":null,"cover":"https://images.unsplash.com/photo-1649180564403-db28d5673f48?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2324&q=80","content":"<h1 id=\"Code-Editor\"><a href=\"#Code-Editor\" class=\"headerlink\" title=\"Code Editor\"></a>Code Editor</h1><p><img src=\"https://images.unsplash.com/photo-1649180564403-db28d5673f48?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2324&q=80\" alt=\"IDE\"></p>\n<h2 id=\"Codemirror\"><a href=\"#Codemirror\" class=\"headerlink\" title=\"Codemirror\"></a>Codemirror</h2><p>想要在 react 中使用 codemirror，有两种主要的方式，一种是直接使用 codemirror 这个包，另外一种是使用 codemirror 作为语法和样式库，然后另外使用开发者自行封装的 react 受控或非受控组件。</p>\n<ul>\n<li><p>仅使用 codemirror</p>\n<p>通过 <code>npm i codemirror</code> 安装 codemirror</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// App.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useState<span class=\"token punctuation\">,</span> useRef<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">CM</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'codemirror'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 导入codemirror库</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'codemirror/lib/codemirror.css'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 导入codemirror样式</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'codemirror/theme/material.css'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 导入codemirror material主题</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'codemirror/mode/xml/xml'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 导入xml语言支持，html也用xml就行</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./styles.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> editor <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>content<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    &lt;h1>Hello world&lt;/h1>\n    &lt;h1>你好，世界&lt;/h1>\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    editor<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token constant\">CM</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromTextArea</span><span class=\"token punctuation\">(</span>editor<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">lineNumbers</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineWrapping</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token string\">'material'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'xml'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lint</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    editor<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>content<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>App<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>editor<span class=\"token punctuation\">&#125;</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用 <code>react-codemirror2</code> 库，配合 codemirror 库使用</li>\n</ul>\n<p>首先还是要通过 npm 安装， <code>npm i codemirror react-codemirror2</code></p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useState <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controlled <span class=\"token keyword\">as</span> ControlledEditor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-codemirror2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'codemirror/lib/codemirror.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'codemirror/theme/material.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'codemirror/mode/javascript/javascript'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Editor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>content<span class=\"token punctuation\">,</span> setContent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">let a = 1;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ControlledEditor</span></span>\n      <span class=\"token attr-name\">options</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token string\">'material'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">lineNumbers</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">lineWrapping</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></span>\n      <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>content<span class=\"token punctuation\">&#125;</span></span>\n      <span class=\"token attr-name\">onBeforeChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">editor<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Editor<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>codemirror 支持多种语言的语法高亮，使用 mode 定义当前语言，导入对应的 codemirror&#x2F;mode&#x2F;*下的对应的语言包的 js 文件，就可以实现高亮显示。另外，codemirror 也有很多可配置项，支持 diff 试图（需要另外引入 diff match 包）。codemirror 的宿主是 textarea。还提供了 addon 可配置。</p>\n</div>\n<h2 id=\"highlight-js\"><a href=\"#highlight-js\" class=\"headerlink\" title=\"highlight.js\"></a>highlight.js</h2><p><code>hljs</code> 仅用来做代码块的高亮，是一个小巧且便捷的库。也支持多种语言高亮，不支持编辑。使用方法更像是一个函数，用函数来高亮你的代码块，一般用在博客或者一些网站用来展示一段代码等场景居多。</p>\n<h2 id=\"monaco-editor\"><a href=\"#monaco-editor\" class=\"headerlink\" title=\"monaco-editor\"></a>monaco-editor</h2><p><code>monaco editor</code> 是微软的 <code>vscode</code> 在 browser 里的实现，功能可以参考 vscode，十分强大。也可以通过 npm 来安装到你的 web 项目中。配置上有点麻烦，但是社区有开发者封装的包也比较好用。因为涉及的一些语法提示功能，需要配置 <code>web-worker</code>，还需要 vs 的 loader 来驱动，所以如果是单引入了 monaco，那么不仅需要配置 <code>webpack</code> 的 monaco 的 plugin，可能还要有一个处理 worker 的地方。具体的配法建议 google。</p>\n<p>有个方便使用的包是 <code>@monaco-editor/react</code> ，使用这个包，可谓是开箱即用的，默认导出的模块是 Editor，使用方法当做普通组件一样就行。但是需要注意的是，使用中会加载一个 vs 的 loader，默认是引用的 cdn 的文件，当处于离线环境时，编辑器就会停在 loading 的页面，没法使用。想要在内网或者是离线环境下使用，就得自己把 vs 的文件夹一同打包到 web 项目里，然后在引用 editor 的地方，使用 <code>@monaco-editor/react</code> 提供的 loader 函数，配置 paths 的 vs，使用下载的 vs 文件夹的地址，这样才能使用静态的 loader 文件，完整语法提示功能。</p>\n<p>功能上来看，monaco editor 功能最强大毋庸置疑，光是语法提示在使用上就很方便，很多知名的在线编辑器，比如 codesandbox、bitbucket 等都是使用 monaco 作为编辑器。体验上接近了 vscode 客户端。不过上面提到的包含 loader 的 vs 文件夹，min size 的都有 14M 多，如果你的项目只是需要高亮功能，不需要交互的话，还是推荐选择轻量的 syntax highlight 库来实现。</p>\n","text":"Code Editor Codemirror想要在 react 中使用 codemirror，有两种主要的方式，一种是直接使用 codemirror 这个包，另外一种是使用 codemirror 作为语法和样式库，然后另外使用开发者自行封装的 react 受控或非受控组件。 仅使...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"frontend","slug":"frontend","count":12,"path":"api/categories/frontend.json"},{"name":"react","slug":"frontend/react","count":5,"path":"api/categories/frontend/react.json"}],"tags":[{"name":"frontend","slug":"frontend","count":11,"path":"api/tags/frontend.json"},{"name":"react","slug":"react","count":5,"path":"api/tags/react.json"},{"name":"codemirror","slug":"codemirror","count":3,"path":"api/tags/codemirror.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Code-Editor\"><span class=\"toc-text\">Code Editor</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Codemirror\"><span class=\"toc-text\">Codemirror</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#highlight-js\"><span class=\"toc-text\">highlight.js</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#monaco-editor\"><span class=\"toc-text\">monaco-editor</span></a></li></ol></li></ol>","author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何优雅地展开(拍平)一个数组","uid":"2a5b9e073fe829313e9670bd00f2af01","slug":"elegantly-flatten-a-list","date":"2020-12-18T03:17:20.000Z","updated":"2023-01-12T09:50:07.540Z","comments":true,"path":"api/articles/elegantly-flatten-a-list.json","keywords":null,"cover":"https://images.unsplash.com/photo-1561736778-92e52a7769ef?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80","text":"问题给定任一数组xs，其内部可能包含任意类型的值或是其他数组。我们希望展开xs内部所有的值，变为一个一维数组。例如： flatten([1, [3], [[6, 7], [[[]], 8]]]) =&gt; [1, 3, 6, 7, 8] flatten([&#123;a: 3&...","link":"","photos":[],"count_time":{"symbolsCount":962,"symbolsTime":"1 mins."},"categories":[{"name":"frontend","slug":"frontend","count":12,"path":"api/categories/frontend.json"},{"name":"javascript","slug":"frontend/javascript","count":3,"path":"api/categories/frontend/javascript.json"}],"tags":[{"name":"frontend","slug":"frontend","count":11,"path":"api/tags/frontend.json"},{"name":"javascript","slug":"javascript","count":4,"path":"api/tags/javascript.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}},"next_post":{"title":"Jest: JavaScript单元测试快速入门","uid":"2376683db1311ee594f9efc1800bc966","slug":"getting-started-with-javascript-testing","date":"2020-10-14T09:36:45.000Z","updated":"2023-01-12T09:50:07.540Z","comments":true,"path":"api/articles/getting-started-with-javascript-testing.json","keywords":null,"cover":"https://www.valentinog.com/blog/static/fb2ec01570723a0b1c24255109718879/c1b63/getting-started-with-jest.png","text":" 测试意味着什么？在技术术语中，测试意味着检查我们的代码是否符合某些期望。例如，名为transformer的函数，应在给定某些输入的情况下返回预期的输出。 测试类型很多，这么多术语很快就会让人感到不知所措，简而言之测试分为下面三大类： 单元测试 整合测试 UI 测试 本文仅介绍单...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"frontend","slug":"frontend","count":12,"path":"api/categories/frontend.json"},{"name":"javascript","slug":"frontend/javascript","count":3,"path":"api/categories/frontend/javascript.json"}],"tags":[{"name":"frontend","slug":"frontend","count":11,"path":"api/tags/frontend.json"},{"name":"javascript","slug":"javascript","count":4,"path":"api/tags/javascript.json"},{"name":"jest","slug":"jest","count":1,"path":"api/tags/jest.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}}}