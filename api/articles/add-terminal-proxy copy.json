{"title":"如何下载腾讯课堂的视频","uid":"79264c02304337425f30ee40c869ee63","slug":"add-terminal-proxy copy","date":"2023-03-13T03:36:48.000Z","updated":"2023-03-13T03:39:32.012Z","comments":true,"path":"api/articles/add-terminal-proxy copy.json","keywords":null,"cover":"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1974&q=80","content":"<p>腾讯课堂的视频使用 m3u8 索引的分片推流，而且有 key 进行加密。在网站上没有提供视频下载的功能，很好的保护了视频版权。但是总是要登录并且在有网络的环境下查看视频总是有不方便的地方。所以本文记录下如何下载腾讯课堂里的视频，当前前提是你要有权限看到你想要下载的课程。</p>\n<h2 id=\"1-打开腾讯课堂课程页面，并且登录\"><a href=\"#1-打开腾讯课堂课程页面，并且登录\" class=\"headerlink\" title=\"1. 打开腾讯课堂课程页面，并且登录\"></a>1. 打开腾讯课堂课程页面，并且登录</h2><p>以一个课程地址为例：</p>\n<p><a href=\"https://ke.qq.com/course/5892689/13883868337269329#term_id=106109971\">https://ke.qq.com/course/5892689/13883868337269329#term_id&#x3D;106109971</a></p>\n<h2 id=\"2-从-github-获取工具\"><a href=\"#2-从-github-获取工具\" class=\"headerlink\" title=\"2. 从 github 获取工具\"></a>2. 从 github 获取工具</h2><p>我使用了这个 <strong><a href=\"https://github.com/HarryWang29/tencentKeTang\">https://github.com/HarryWang29/tencentKeTang</a></strong> ，2023-03-13 11:05:21 检测可用，但是没法自动合并视频分片。</p>\n<p>下载系统对应的文件，解压到一个文件夹里，这个是我们后边要执行各种命令的项目根文件夹，假设我们解压到的文件夹是 downloader，里面包含俩文件，一个是 tencentKeTang 的可执行文件，一个是配置 yaml 格式的。</p>\n<h2 id=\"3-前提准备\"><a href=\"#3-前提准备\" class=\"headerlink\" title=\"3. 前提准备\"></a>3. 前提准备</h2><p>使用上述的工具，需要准备好两个程序 ffmpeg 和 ffprobe ，在 <a href=\"https://evermeet.cx/ffmpeg/\">https://evermeet.cx/ffmpeg/</a> 这个页面里，下载 ffmpeg-6.0 和 ffprobe-6.0 的 zip 包。其他压缩格式也可以，能把可执行文件解压出来就行。我这里使用的是 macos 系统。</p>\n<p>下载完之后解压，每个压缩包里有一个可执行文件。将这两个配置文件放在上面工具解压的项目目录下，然后修改项目下的 yaml 配置文件，把项目文件夹作为 ffmpeg 的 path。</p>\n<p>在你的腾讯课堂网页里，打开浏览器控制台，输入 document.cookie 获取当前的 cookie，粘贴到 yaml 配置文件里 cookie 的位置。</p>\n<h2 id=\"4-获取课程视频\"><a href=\"#4-获取课程视频\" class=\"headerlink\" title=\"4. 获取课程视频\"></a>4. 获取课程视频</h2><p>执行工具程序，在课程地址中 5892689 是 cid，我们可以用命令 tree -c 5892689 来获取课程目录验证是不是想要下载的课程。然后如果要下载全部课程，使用 d -c 5892689 即可下载课程下全部视频，单个下载使用 d -t [视频 ID]。</p>\n<h2 id=\"5-合并视频\"><a href=\"#5-合并视频\" class=\"headerlink\" title=\"5. 合并视频\"></a>5. 合并视频</h2><p>这个工具在我使用的时候，已经不能自动合并视频了，查找了 issue 找到了一个解决方案。</p>\n<p>issue: <a href=\"https://github.com/HarryWang29/tencentKeTang/issues/61\">https://github.com/HarryWang29/tencentKeTang/issues/61</a></p>\n<p><a href=\"https://github.com/2470566603/tencentKeTangMerge\">https://github.com/2470566603/tencentKeTangMerge</a></p>\n<p>合并视频的工具，py 写的。在 mac 里执行，先增加一个脚本头。下载这个 py 文件之后，在文件头添加一行 <code>#!/usr/bin/env python3</code> 。然后修改文件的执行权限，假设文件名为 <code>[down.py](http://down.py)</code> ，执行 <code>chmod a+x down.py</code> 来添加可执行权限。</p>\n<p>然后文件放在项目的根目录下。直接执行 .&#x2F;down.py 等待合并完成即可。如果遇到 <code>ffmpeg: command not found</code> 的问题，是 ffmpeg 没添加到 PATH 里，可以添加环境变量，或者修改 py 中的执行命令，将 <code>ffmpeg</code> 改为 <code>./ffmpeg</code> 。</p>\n<p>执行完之后，会把所有碎片合并为一个 mp4 文件。</p>\n","text":"腾讯课堂的视频使用 m3u8 索引的分片推流，而且有 key 进行加密。在网站上没有提供视频下载的功能，很好的保护了视频版权。但是总是要登录并且在有网络的环境下查看视频总是有不方便的地方。所以本文记录下如何下载腾讯课堂里的视频，当前前提是你要有权限看到你想要下载的课程。 1. 打...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"mac","slug":"mac","count":2,"path":"api/categories/mac.json"}],"tags":[{"name":"tool","slug":"tool","count":1,"path":"api/tags/tool.json"},{"name":"腾讯课堂","slug":"腾讯课堂","count":1,"path":"api/tags/腾讯课堂.json"},{"name":"terminal","slug":"terminal","count":2,"path":"api/tags/terminal.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%89%93%E5%BC%80%E8%85%BE%E8%AE%AF%E8%AF%BE%E5%A0%82%E8%AF%BE%E7%A8%8B%E9%A1%B5%E9%9D%A2%EF%BC%8C%E5%B9%B6%E4%B8%94%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">1. 打开腾讯课堂课程页面，并且登录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E4%BB%8E-github-%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">2. 从 github 获取工具</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%89%8D%E6%8F%90%E5%87%86%E5%A4%87\"><span class=\"toc-text\">3. 前提准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E8%8E%B7%E5%8F%96%E8%AF%BE%E7%A8%8B%E8%A7%86%E9%A2%91\"><span class=\"toc-text\">4. 获取课程视频</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%90%88%E5%B9%B6%E8%A7%86%E9%A2%91\"><span class=\"toc-text\">5. 合并视频</span></a></li></ol>","author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"The basics of Spot by NetApp: Elastigroup and Managed Instance","uid":"e9e12b205fbf2efe6389f71e059754e8","slug":"the-basics-of-spot-by-netapp","date":"2023-02-03T05:47:19.000Z","updated":"2023-02-03T07:04:16.471Z","comments":true,"path":"api/articles/the-basics-of-spot-by-netapp.json","keywords":null,"cover":"https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80","text":"What is Spot?In the most general sense Spot is a life cycle type for virtual machines running in a hyperscaler like Amazon or Azure. Other c...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"Spot","slug":"Spot","count":1,"path":"api/categories/Spot.json"},{"name":"Elastigroup","slug":"Spot/Elastigroup","count":1,"path":"api/categories/Spot/Elastigroup.json"}],"tags":[{"name":"Spot","slug":"Spot","count":1,"path":"api/tags/Spot.json"},{"name":"NetApp","slug":"NetApp","count":1,"path":"api/tags/NetApp.json"},{"name":"Elastigroup","slug":"Elastigroup","count":1,"path":"api/tags/Elastigroup.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}}}