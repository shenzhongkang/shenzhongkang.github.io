{"title":"基于react-boilerplate脚手架添加前端代理","uid":"e1bb4152919c888976987aa6b85cefd0","slug":"add-proxy-middleware-based-on-react-boilerplate","date":"2019-09-29T07:49:12.000Z","updated":"2023-01-12T09:50:07.000Z","comments":true,"path":"api/articles/add-proxy-middleware-based-on-react-boilerplate.json","keywords":null,"cover":"https://images.unsplash.com/photo-1633356122544-f134324a6cee?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80","content":"<p><code>React-Boilerplate</code>是一个对开发者非常友好的 React 脚手架，官方有很详细的文档，脚手架本身可配置的地方也很多，基本可以满足 React 开发中的自定义需求。本文介绍了如何在此脚手架添加前端 Proxy，使 api 访问能够代理到指定 ip。</p>\n<h3 id=\"安装开发依赖-http-proxy-middleware\"><a href=\"#安装开发依赖-http-proxy-middleware\" class=\"headerlink\" title=\"安装开发依赖 http-proxy-middleware\"></a>安装开发依赖 <code>http-proxy-middleware</code></h3><p>前端常用的 npm 包，用来做 node server 代理的。通过 npm 或 yarn 作为开发依赖安装。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm i http<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>middleware <span class=\"token operator\">-</span><span class=\"token constant\">D</span> <span class=\"token operator\">/</span> yarn add http<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>middleware <span class=\"token operator\">-</span><span class=\"token constant\">D</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"在项目根目录添加-proxy-json-文件\"><a href=\"#在项目根目录添加-proxy-json-文件\" class=\"headerlink\" title=\"在项目根目录添加 proxy.json 文件\"></a>在项目根目录添加 <code>proxy.json</code> 文件</h3><p>此文件就是需要代理的 api 和转发到的 ip 以及端口了。具体撰写格式仿照下面:</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"default\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:8080\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"endpoints\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/api/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/auth/*\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"biz\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:8081\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"endpoints\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/sys/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/biz/*\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>*</code> 号会匹配 <code>/</code> 后面所有字符；</p></blockquote>\n<h3 id=\"在-server-x2F-middlewares-文件夹里添加-addProxyMiddlewares-js-文件\"><a href=\"#在-server-x2F-middlewares-文件夹里添加-addProxyMiddlewares-js-文件\" class=\"headerlink\" title=\"在 server&#x2F;middlewares 文件夹里添加 addProxyMiddlewares.js 文件\"></a>在 server&#x2F;middlewares 文件夹里添加 <code>addProxyMiddlewares.js</code> 文件</h3><p>在这个文件里我们读取最外面的 <code>proxy.json</code> 并生成代理。代码如下:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable no-console */</span>\n<span class=\"token comment\">// const proxy = require('http-proxy-middleware'); // 0.x.x版本用法</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> createProxyMiddleware <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http-proxy-middleware'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> chalk <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chalk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> logger <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../logger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Proxy middleware</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addProxyMiddlewares</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app<span class=\"token punctuation\">,</span> proxyPath</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> proxyConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>proxyPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      proxyConfig <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>proxyPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">parse ./proxy.json: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>error<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> servicesKeys <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>proxyConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'proxy config:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>proxyConfig<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    servicesKeys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> proxyConfig<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> api <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> service<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> logLevel <span class=\"token operator\">=</span> service<span class=\"token punctuation\">.</span>logLevel <span class=\"token operator\">||</span> <span class=\"token string\">'info'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// const Proxy = proxy(&#123; // 0.x.x版本用法</span>\n      <span class=\"token comment\">//   target: api,</span>\n      <span class=\"token comment\">//   logLevel,</span>\n      <span class=\"token comment\">//   changeOrigin: true,</span>\n      <span class=\"token comment\">// &#125;);</span>\n      <span class=\"token keyword\">const</span> Proxy <span class=\"token operator\">=</span> <span class=\"token function\">createProxyMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> api<span class=\"token punctuation\">,</span>\n        logLevel<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">changeOrigin</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      service<span class=\"token punctuation\">.</span>endpoints<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">endpoint</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        app<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">bold</span><span class=\"token punctuation\">(</span><span class=\"token string\">'->'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">bold</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">gray</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">Proxy</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">proxy config error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>error<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">addProxyMiddlewares</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> app<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里用到外层的 <code>logger.js</code> \b 在上一层文件夹里，脚手架自带的，用来在 node 启动服务时，打印一些日志或错误信息用的。</p></blockquote>\n<h3 id=\"使用代理中间件\"><a href=\"#使用代理中间件\" class=\"headerlink\" title=\"使用代理中间件\"></a>使用代理中间件</h3><p>在 <code>server/middlewares</code> 文件夹里，找到 <code>frontendMiddleware.js</code>。使用代理包裹 app 实例。具体代码如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable global-require */</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Front-end middleware\n */</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> isProd <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isProd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> addProdMiddlewares <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./addProdMiddlewares'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addProdMiddlewares</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> webpackConfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../internals/webpack/webpack.dev.babel'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> addDevMiddlewares <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./addDevMiddlewares'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> addProxyMiddlewares <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./addProxyMiddlewares'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> proxyPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'proxy.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addProxyMiddlewares</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> proxyPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addDevMiddlewares</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> webpackConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> app<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h3><p>此时就可以在 <code>proxy.json</code> 中添加你想要代理的 api 和 ip 了。然后通过 <code>npm start</code> 启动，可以看到控制台里会打印出代理的 ip 和发送的一些请求。此脚手架还可以通过 <code>PORT=4000 npm start</code> 的方式，指定端口启动。</p>\n","text":"React-Boilerplate是一个对开发者非常友好的 React 脚手架，官方有很详细的文档，脚手架本身可配置的地方也很多，基本可以满足 React 开发中的自定义需求。本文介绍了如何在此脚手架添加前端 Proxy，使 api 访问能够代理到指定 ip。 安装开发依赖 ht...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"react","slug":"frontend/react","count":5,"path":"api/categories/frontend/react.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"javascript","slug":"javascript","count":5,"path":"api/tags/javascript.json"},{"name":"react","slug":"react","count":5,"path":"api/tags/react.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%BC%80%E5%8F%91%E4%BE%9D%E8%B5%96-http-proxy-middleware\"><span class=\"toc-text\">安装开发依赖 http-proxy-middleware</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E9%A1%B9%E7%9B%AE%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%B7%BB%E5%8A%A0-proxy-json-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在项目根目录添加 proxy.json 文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8-server-x2F-middlewares-%E6%96%87%E4%BB%B6%E5%A4%B9%E9%87%8C%E6%B7%BB%E5%8A%A0-addProxyMiddlewares-js-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在 server&#x2F;middlewares 文件夹里添加 addProxyMiddlewares.js 文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E4%B8%AD%E9%97%B4%E4%BB%B6\"><span class=\"toc-text\">使用代理中间件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90\"><span class=\"toc-text\">完成</span></a></li></ol>","author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用 concurrently 同时运行多个 npm 命令","uid":"24cc8df004fa0ce0bf9cf8c443843104","slug":"concurrently","date":"2020-07-30T07:27:56.000Z","updated":"2023-01-12T09:50:07.000Z","comments":true,"path":"api/articles/concurrently.json","keywords":null,"cover":"https://images.unsplash.com/photo-1603302576837-37561b2e2302?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2336&q=80","text":"我们平时可能需要同时在一个 npm scripts 中运行多个 npm 命令。这时候，我们第一时间想到的 &amp;&amp;，比如 npm run build &amp;&amp; npm start。虽然比较方便，但是很难追踪不同的输出，并且当其中一个进程失败的时候，另外的一...","link":"","photos":[],"count_time":{"symbolsCount":443,"symbolsTime":"1 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"node","slug":"frontend/node","count":1,"path":"api/categories/frontend/node.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"},{"name":"npm","slug":"npm","count":2,"path":"api/tags/npm.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}},"next_post":{"title":"联想zuk z2 pro线刷官方底包","uid":"9f3a35cb2cc930438770890b12612180","slug":"lash-rom-on-lenovo-zuk-z2-pro","date":"2019-08-12T13:00:02.000Z","updated":"2023-01-12T09:50:07.000Z","comments":true,"path":"api/articles/lash-rom-on-lenovo-zuk-z2-pro.json","keywords":null,"cover":"https://images.pexels.com/photos/1092644/pexels-photo-1092644.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2","text":"ROM 说明适配机型：联想 zuk z2 pro（z2121）zui 版本：zui 4.0.247安卓版本：8.0刷机类型：线刷包压缩包大小：1.8G包名：Z2121_CN_OPEN_USER_Q00030.1_O_ZUI_4.0.247_ST_181017_qpst.zip包下...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"android","slug":"android","count":1,"path":"api/categories/android.json"}],"tags":[{"name":"android","slug":"android","count":1,"path":"api/tags/android.json"},{"name":"rom","slug":"rom","count":1,"path":"api/tags/rom.json"},{"name":"mobile","slug":"mobile","count":1,"path":"api/tags/mobile.json"},{"name":"hack","slug":"hack","count":1,"path":"api/tags/hack.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}}}