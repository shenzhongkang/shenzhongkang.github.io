{"title":"[指南]: JavaScript中的var, let和const","uid":"b575729d8618cc3713b6023b411791fd","slug":"javascript-var-let-const","date":"2020-10-13T07:41:45.000Z","updated":"2023-01-12T09:50:07.540Z","comments":true,"path":"api/articles/javascript-var-let-const.json","keywords":null,"cover":"https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80","content":"<p><img src=\"https://www.valentinog.com/blog/static/7e9e29356715f3c4830524da02e4cf68/166a3/var-let-const-cheatsheet.png\" alt=\"header-img\"></p>\n<ul>\n<li><a href=\"#var\">var</a><ul>\n<li><a href=\"#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F\">块级作用域和全局作用域</a></li>\n<li><a href=\"#%E6%84%8F%E6%96%99%E4%B9%8B%E5%A4%96%E7%9A%84%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\">意料之外的全局变量</a></li>\n<li><a href=\"#%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%E5%92%8C%E9%87%8D%E6%96%B0%E5%A3%B0%E6%98%8E\">重新分配和重新声明</a></li>\n</ul>\n</li>\n<li><a href=\"#let\">let</a><ul>\n<li><a href=\"#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F\">块级作用域</a></li>\n<li><a href=\"#%E4%B8%B4%E6%97%B6%E6%AD%BB%E5%8C%BA\">临时死区</a></li>\n<li><a href=\"#%E5%8F%AF%E4%BB%A5%E9%87%8D%E6%96%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E4%B8%8D%E5%8F%AF%E4%BB%A5%E9%87%8D%E6%96%B0%E5%A3%B0%E6%98%8E\">可以重新赋值，不可以重新声明</a></li>\n</ul>\n</li>\n<li><a href=\"#const\">const</a><ul>\n<li><a href=\"#const-%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F\">块级作用域</a></li>\n<li><a href=\"#const-%E4%B8%B4%E6%97%B6%E6%AD%BB%E5%8C%BA\">临时死区</a></li>\n<li><a href=\"#%E4%B8%8D%E8%83%BD%E9%87%8D%E6%96%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E4%B8%8D%E8%83%BD%E9%87%8D%E6%96%B0%E5%A3%B0%E6%98%8E\">不能重新赋值，不能重新声明</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"var\"><a href=\"#var\" class=\"headerlink\" title=\"var\"></a>var</h2><p><code>var</code>用来在 JavaScript 中声明一个变量，该变量遵循以下规则：</p>\n<ul>\n<li>函数级作用域(块级作用域)或者全局作用域。</li>\n<li>不受暂时死区(Temporal dead zone)的约束。</li>\n<li>在<code>window</code>对象下创建一个同名的全局属性。</li>\n<li>可重新分配。</li>\n<li>可重新声明。</li>\n</ul>\n<h3 id=\"块级作用域和全局作用域\"><a href=\"#块级作用域和全局作用域\" class=\"headerlink\" title=\"块级作用域和全局作用域\"></a>块级作用域和全局作用域</h3><p><code>var</code>如果是在全局作用域下出现，则创建一个全局变量，并且也同时在<code>window</code>对象中创建了一个同名的全局属性。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>当在函数中使用<code>var</code>声明变量时，则是函数级作用域。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>var</code>具有变量声明提升的特点</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> city<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 被提升</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"意料之外的全局变量\"><a href=\"#意料之外的全局变量\" class=\"headerlink\" title=\"意料之外的全局变量\"></a>意料之外的全局变量</h3><p>没有使用<code>var</code>、<code>let</code>、<code>const</code>声明的变量，默认成为全局变量：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以通过启用 <code>严格模式</code> 来规避这个问题:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError: assignment to undeclared variable city</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"重新分配和重新声明\"><a href=\"#重新分配和重新声明\" class=\"headerlink\" title=\"重新分配和重新声明\"></a>重新分配和重新声明</h3><p>任何使用<code>var</code>定义的变量，都可以在后面再次声明或是再次赋值。</p>\n<p>redeclaration:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>reassignaton:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h2><p>使用<code>let</code>声明的变量遵循以下规则：</p>\n<ul>\n<li>块级作用域</li>\n<li>受临时死区的限制</li>\n<li>不会在<code>window</code>上创建任何属性</li>\n<li>可以重新赋值</li>\n<li>不可以重新声明</li>\n</ul>\n<h3 id=\"块级作用域\"><a href=\"#块级作用域\" class=\"headerlink\" title=\"块级作用域\"></a>块级作用域</h3><p><code>let</code>声明的变量不会在<code>window</code>上创建任何全局属性</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>当在函数内使用<code>let</code>时，该变量的作用域仅限于函数内</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hanzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>当在代码块中使用<code>let</code>，改变量的作用域仅限于代码块中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>if</code>代码块</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果是<code>var</code>定义的，则不会产生块级作用域</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"临时死区\"><a href=\"#临时死区\" class=\"headerlink\" title=\"临时死区\"></a>临时死区</h3><p><code>let</code>声明会提升，但是会加入临时死区。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TDZ</span>\n  <span class=\"token keyword\">let</span> city<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError: can't access lexical declaration 'city' before initialization</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>TDZ(Temporal dead zone)</code>临时死区用来方式变量在初始化之前被访问。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TDZ</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError: can't access lexical declaration 'city' before initialization</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>出现上面这个异常错误，就代表出现了临时死区。</p>\n<h3 id=\"可以重新赋值，不可以重新声明\"><a href=\"#可以重新赋值，不可以重新声明\" class=\"headerlink\" title=\"可以重新赋值，不可以重新声明\"></a>可以重新赋值，不可以重新声明</h3><p>can’t be redeclared:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hanzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError: redeclaration of let city</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>reassignation:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h2><p>使用<code>const</code>声明的变量遵循以下规则：</p>\n<ul>\n<li>块级作用域</li>\n<li>受临时死区的限制</li>\n<li>不创建任何挂载到<code>window</code>上的全局属性</li>\n<li>不可以重新赋值</li>\n<li>不可以重新声明</li>\n</ul>\n<h3 id=\"const-块级作用域\"><a href=\"#const-块级作用域\" class=\"headerlink\" title=\"const-块级作用域\"></a>const-块级作用域</h3><p><code>const</code>声明的变量不会在<code>window</code>上创建任何全局属性</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>当在函数内使用<code>const</code>时，该变量的作用域仅限于函数内</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hanzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>当在代码块中使用<code>const</code>，改变量的作用域仅限于代码块中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>if</code>代码块</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hangzhou\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Beijing\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"const-临时死区\"><a href=\"#const-临时死区\" class=\"headerlink\" title=\"const-临时死区\"></a>const-临时死区</h3><p><code>const</code>声明会提升，但是会加入临时死区。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">\"Beijing\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> city<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError: can't access lexical declaration 'city' before initialization</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"不能重新赋值，不能重新声明\"><a href=\"#不能重新赋值，不能重新声明\" class=\"headerlink\" title=\"不能重新赋值，不能重新声明\"></a>不能重新赋值，不能重新声明</h3><p><code>const</code>声明的变量（常量）不能重新声明，也不能重新赋值。</p>\n<p>can’t be redeclared</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError: redeclaration of const city</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>can’t be reassigned</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> city <span class=\"token operator\">=</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">;</span>\n  city <span class=\"token operator\">=</span> <span class=\"token string\">'Hangzhou'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError: invalid assignment to const 'city'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":" var 块级作用域和全局作用域 意料之外的全局变量 重新分配和重新声明 let 块级作用域 临时死区 可以重新赋值，不可以重新声明 const 块级作用域 临时死区 不能重新赋值，不能重新声明 varvar用来在 JavaScript 中声明一个变量，该变量遵循以下规则： 函数...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"tutorial","slug":"frontend/tutorial","count":2,"path":"api/categories/frontend/tutorial.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"basic","slug":"basic","count":1,"path":"api/tags/basic.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#var\"><span class=\"toc-text\">var</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">块级作用域和全局作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%84%8F%E6%96%99%E4%B9%8B%E5%A4%96%E7%9A%84%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">意料之外的全局变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%E5%92%8C%E9%87%8D%E6%96%B0%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">重新分配和重新声明</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#let\"><span class=\"toc-text\">let</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">块级作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%B4%E6%97%B6%E6%AD%BB%E5%8C%BA\"><span class=\"toc-text\">临时死区</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E4%BB%A5%E9%87%8D%E6%96%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E4%B8%8D%E5%8F%AF%E4%BB%A5%E9%87%8D%E6%96%B0%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">可以重新赋值，不可以重新声明</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#const\"><span class=\"toc-text\">const</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#const-%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">const-块级作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#const-%E4%B8%B4%E6%97%B6%E6%AD%BB%E5%8C%BA\"><span class=\"toc-text\">const-临时死区</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E8%83%BD%E9%87%8D%E6%96%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E4%B8%8D%E8%83%BD%E9%87%8D%E6%96%B0%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">不能重新赋值，不能重新声明</span></a></li></ol></li></ol>","author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"[夯实基础]使用JavaScript生成表格","uid":"aa47fed830b3b43172f76581df42053e","slug":"create-html-table-with-js","date":"2020-10-14T07:11:44.000Z","updated":"2023-01-12T09:50:07.540Z","comments":true,"path":"api/articles/create-html-table-with-js.json","keywords":null,"cover":"https://images.unsplash.com/photo-1529078155058-5d716f45d604?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2338&q=80","text":"使用原生 API 来操作 DOM 是很多技术面试中会问到的问题，这篇文章里，我们不使用任何框架或库，就使用纯原生的 js 来创建一个表格。 前提你需要具备基本的 HTML 和 JavaScript 知识。 需求分析我们需要将一份名为”mountains“的数组（Collectio...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"javascript","slug":"frontend/javascript","count":3,"path":"api/categories/frontend/javascript.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"javascript","slug":"javascript","count":5,"path":"api/tags/javascript.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}},"next_post":{"title":"React + Typescript！使用react-boilerplate-cra-template创建react项目","uid":"3ca11276a4cccae9aefdd51129835758","slug":"cra-template-rb","date":"2020-09-07T06:18:48.000Z","updated":"2023-01-12T09:50:07.540Z","comments":true,"path":"api/articles/cra-template-rb.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669295384050-a1d4357bd1d7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80","text":"React + Typescript！使用 react-boilerplate-cra-template 创建 react 项目Create react app use react-boilerplate-cra-template.1. 使用 cra-template-rb 模板...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"react","slug":"frontend/react","count":5,"path":"api/categories/frontend/react.json"},{"name":"typescript","slug":"frontend/react/typescript","count":1,"path":"api/categories/frontend/react/typescript.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"react","slug":"react","count":5,"path":"api/tags/react.json"},{"name":"typescript","slug":"typescript","count":1,"path":"api/tags/typescript.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}}}