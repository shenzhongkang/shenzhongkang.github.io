{"title":"The basics of Spot by NetApp: Elastigroup and Managed Instance","uid":"e9e12b205fbf2efe6389f71e059754e8","slug":"the-basics-of-spot-by-netapp","date":"2023-02-03T05:47:19.000Z","updated":"2023-02-03T07:04:16.471Z","comments":true,"path":"api/articles/the-basics-of-spot-by-netapp.json","keywords":null,"cover":"https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80","content":"<h2 id=\"What-is-Spot\"><a href=\"#What-is-Spot\" class=\"headerlink\" title=\"What is Spot?\"></a>What is Spot?</h2><p>In the most general sense Spot is a life cycle type for virtual machines running in a hyperscaler like Amazon or Azure. Other common instance types would be on-demand or reserved.</p>\n<p>On-demand is typically what most people would think of, which is a virtual machine that you start or stop. And your expectation is that VM will run when you start is and only stop when you stop it.</p>\n<p>Spot is a little bit different. Spot VMs run from the excess capacity that a hyperscaler has at any given point in time. And that excess capacity will be based off things like your specific instance type, the region and the availability zone.</p>\n<p>Since Spot VMs run from excess capacity and not dedicated capacity like on-demand VMs. They can be reclaimed at any time by the hyperscaler, typically with a 30 seconds to two minutes warning. After your warning, 30 seconds or two minutes ahead, the VM is typically terminated along with any dependent resources like EBS volumes, ENIs.</p>\n<p>So why use Spot then if it can be pulled out from under you at any given time? In a word, cost with Spot VMs, you can save up to 90% versus on-demand for a particular instance type naturally Spot lends itself to sub prod workloads, your dev, your test and stage where the expectation isn’t that VMs will run 24 by seven without any interruptions for production workloads though, the story can be a little different, but with the proper tooling from Spot by NetApp, even production workloads can utilize Spot instances Spot by NetApp helps you manage unpredictable Spot VMs in a predictable way while you minimize costs and maximize uptime Spot by NetApp has several different sub components.</p>\n<h2 id=\"Managed-instances-and-Elastigroup\"><a href=\"#Managed-instances-and-Elastigroup\" class=\"headerlink\" title=\"Managed instances and Elastigroup\"></a>Managed instances and Elastigroup</h2><p>Today, we’re gonna talk about two of them managed instances and elastic groups.</p>\n<p>Managed instances are meant to address the stateful VM use case, on paper, Spot is not a fit for the stateful VM use case because when your VM is inevitably terminated and it will be terminated, you lose everything.</p>\n<p>So how to run a stateful VM using Spot? Think of managed instance as a logical placeholder for your VM that exists outside the hyperscaler.</p>\n<p>So even though your hyperscaler terminates your VM and from their perspective, it’s effectively gone. Spot by NetApp maintains that logical placeholder that keeps your EVS discs, your IP address and so on intact when your VM is terminated by the hyperscaler. Based on your managed instance configuration, Spot by NetApp will spin up a replacement Spot VM with the same EBS discs, all your data, the route EBS and any additional EBS, your IP address, all of that will come back within about 10 minutes.</p>\n<p>The way that works with managed instance is that while your Spot VM is running inside the hyperscaler, Spot by NetApp takes snapshots every few minutes up to about five or so continuously.</p>\n<p>So when your Spot VM is terminated and it will be terminated at some point, Spot by NetApp will attempt to restart your VM using the latest snapshot an image is created. And then from that image, a new Spot instance is launched with a new instance type, which hopefull has some available capacity.</p>\n<p>Spot by NetApp elastigroup is sort of a superset of the managed instance features. It can do everything that managed instances can do plus more. So elstigroup as the name implies is really meant for workloads that run on one or more VMs. Elastigroup allows you to manage a pool of VMs with different lifecycle types.</p>\n<p>For example, if your application has 10 VMs, you can configure elastigroup to run as five on-demand and five Spot, that way if you have any Spot reclamations happening, the on-demand VMs can carry the load. And the overall application uptime is not affected.</p>\n<p>Elastic group features predictive rebalancing. So using AI algorithms with 85% accuracy Spot by NetApp can predict when a Spot VM will be interrupted and can take preemptive action. It can deploy a new Spot VM of a different instance type to replace the Spot VM instance type that is about to be terminated this way. You’re keeping the cost advantages of Spot versus on-demand, but also maintaining uptime that your application demands additional elastic group features include the ability to prioritize your elastic group VMs, to be more cost effective, or to prioritize uptime.</p>\n<p>You can also fall back Spot VMs to on-demand in cases where multiple Spot markets for multiple instance types may be exhausted, but you require uptime. Anyway, you can have your Spot VMs that make up your elastigroup fall back to on-demand.</p>\n<p>You can then set a maintenance window for your Elastigroup, perhaps after business hours on the weekend, et cetera, where those on-demand VMs can then fall back to Spot to ensure you’re getting the uptime with the cheapest cost.</p>\n<p>One other feature for both Elastigroups and managed instances is the ability to power off your VM or VMs at a given time say after hours or on the weekend, if you don’t need your VMs to be up and running, then the cheapest option is just to shut them down and then bring them up, before they’re needed.</p>\n","text":"What is Spot?In the most general sense Spot is a life cycle type for virtual machines running in a hyperscaler like Amazon or Azure. Other c...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"Spot","slug":"Spot","count":1,"path":"api/categories/Spot.json"},{"name":"Elastigroup","slug":"Spot/Elastigroup","count":1,"path":"api/categories/Spot/Elastigroup.json"}],"tags":[{"name":"Spot","slug":"Spot","count":1,"path":"api/tags/Spot.json"},{"name":"NetApp","slug":"NetApp","count":1,"path":"api/tags/NetApp.json"},{"name":"Elastigroup","slug":"Elastigroup","count":1,"path":"api/tags/Elastigroup.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#What-is-Spot\"><span class=\"toc-text\">What is Spot?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Managed-instances-and-Elastigroup\"><span class=\"toc-text\">Managed instances and Elastigroup</span></a></li></ol>","author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何下载腾讯课堂的视频","uid":"79264c02304337425f30ee40c869ee63","slug":"add-terminal-proxy copy","date":"2023-03-13T03:36:48.000Z","updated":"2023-03-13T03:39:32.012Z","comments":true,"path":"api/articles/add-terminal-proxy copy.json","keywords":null,"cover":"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1974&q=80","text":"腾讯课堂的视频使用 m3u8 索引的分片推流，而且有 key 进行加密。在网站上没有提供视频下载的功能，很好的保护了视频版权。但是总是要登录并且在有网络的环境下查看视频总是有不方便的地方。所以本文记录下如何下载腾讯课堂里的视频，当前前提是你要有权限看到你想要下载的课程。 1. 打...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"mac","slug":"mac","count":2,"path":"api/categories/mac.json"}],"tags":[{"name":"tool","slug":"tool","count":1,"path":"api/tags/tool.json"},{"name":"腾讯课堂","slug":"腾讯课堂","count":1,"path":"api/tags/腾讯课堂.json"},{"name":"terminal","slug":"terminal","count":2,"path":"api/tags/terminal.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}},"next_post":{"title":"前端入门指导","uid":"9ba2999e5509533e00deb0ba82c03ca2","slug":"frontend-guide","date":"2023-01-13T01:51:39.000Z","updated":"2023-01-13T01:57:24.000Z","comments":true,"path":"api/articles/frontend-guide.json","keywords":null,"cover":"https://images.unsplash.com/photo-1621839673705-6617adf9e890?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1632&q=80","text":"前端开发着路径参见 Roadmap，每年会有一定程度的更新。 推荐的学习网站 Youtube 偏向于视频学习的话，Youtube 上能够找到大量的学习教程，很多也都归纳为一些系列，归档到一个视频列表中，十分方便。Youtube 上种类很多，前后端框架、技术点、工具等等，都能够找到...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"tutorial","slug":"frontend/tutorial","count":2,"path":"api/categories/frontend/tutorial.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"javascript","slug":"javascript","count":5,"path":"api/tags/javascript.json"},{"name":"tutorial","slug":"tutorial","count":1,"path":"api/tags/tutorial.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}}}