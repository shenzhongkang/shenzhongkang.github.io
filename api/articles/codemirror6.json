{"title":"How to build a code editor with codemirror v6","uid":"b7c9b3bcfbf4e44b360ea8bb1c1b66f8","slug":"codemirror6","date":"2021-10-27T03:58:53.000Z","updated":"2023-01-12T09:50:07.000Z","comments":true,"path":"api/articles/codemirror6.json","keywords":null,"cover":"https://images.unsplash.com/photo-1604884223364-9bd06ccb3c8c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80","content":"<p>Codemirror （以下简称 CM） 即将到来的新版本 CM 6，已经在其官网顶部 sticky bar 上加入了宣传链接，CM 6 是一次大的重写，并且在性能和解析等其他方面，都有极大的提升（Much-improved rewrite）。CM 6 采用了 scope 形式的 npm 包，将配置、视图、状态、扩展、语言支持等分为了单独的 npm 包，这样做的好处不言而喻了，相比起费尽心思的去配置 tree-shaking，这种与生俱来的可配置性，使用 slot 的做法，不仅可扩展性提高了，而且对于打包体积也更加的可控。</p>\n<p>在写这篇的时候，我正在启动一个新的项目（Glide-web），该项目是一个数据模型驱动低代码平台。其中有一个用到 CM 的模块，叫做 ”Script Include“ ，用以在前端 UI 上以编码的形式，来操作逻辑表和表单域。当前系统设计里，允许用户编写的代码语言为 Groovy，但按照 ServiceNow 的原型，这里应该会是使用 JavaScript 来编写脚本，利用中台的 Node 中间件来执行，也许前期先做了简单的实现吧。</p>\n<p>在这个模块中，我就使用了 CM 6 来构建了 Code Editor，下面就记录下我的开发过程。</p>\n<p>首先要吐槽的是 CM 6 官方的网站是有了，但是文档写的是真的不行，只是告诉了开发者，CM 6 能够完成哪些事情、实现什么功能、多么强大多么好之类的，但是没有一个入手指南，只给出了单个模块的 interface 介绍，看的着实很费劲，也有可能是还没有做好吧。</p>\n<p>oooook，下面开始进入正题。</p>\n<h3 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h3><p>首先肯定是要有个项目（废话！！）。CM 6 里面用于构建 UI 的 @codemirror&#x2F;view 和用于状态管理的 @codemirror&#x2F;state 都是拆分开来的，不过正经人开发时候，一般都会结合这两个使用，所以需要首先安装这两个包，哎，不过，CM 6 也考虑到大部分人的使用场景，额外的提供了一个包 @codemirror&#x2F;basic-setup 这个包，就是对于上面两个包的合并导出，这样，开发者就可以从一个包里导出 view 和 state 两个模块了，是不是合理多了？</p>\n<p><code>npm i @codemirror/basic-setup</code></p>\n<p>然后在我们的代码里引入</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> EditorView<span class=\"token punctuation\">,</span> EditorState<span class=\"token punctuation\">,</span> basicSetup <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/basic-setup'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> editor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EditorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> EditorState<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> basicSetup <span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面这段代码，返回的是 View 对象。state 接收一个 EditorState 对象用来管理一系列的包含内容、位置等状态信息以及对这些上下文的操作函数。parent 就是编辑器想要挂载的 DOM 对象，在 React 中我们通常会使用 ref.current 来指定具体的某个 DOM 元素。</p>\n<p>按照上面最基本的写法，就能实现个编辑器了，不过真就是最基本的，啥也不是。所以，下面说下进阶的配置。</p>\n<h3 id=\"Language\"><a href=\"#Language\" class=\"headerlink\" title=\"Language\"></a>Language</h3><p>最重要的肯定是希望提供语法高亮支持啦。CM 6 使用的语言支持，也是以单个包的形式引入的，在写这边文档的时候，CM 6 支持的语言还不足 10 种，与 CM 5 支持的 100 多种语言相比，仍然还有很长的路要走，CM 6 允许使用三种方式来编写自己的语法解析器，Lezer、steam-parser、完全自定义的解析器。CM 6 首推的是用 lezer 来做语法解析生成器。</p>\n<p>下面用 JavaScript 来举例。首先你需要安装 <code>@codemirror/lang-javascript</code> ，CM 6 推荐开发者编写的语言解析包，都要以 <code>@codemirror/lang-example</code> 这种格式的命名，好让包能够见名知意。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> javascript <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/lang-javascript'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> editor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EditorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> EditorState<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>basicSetup<span class=\"token punctuation\">,</span> <span class=\"token function\">javascript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Document\"><a href=\"#Document\" class=\"headerlink\" title=\"Document\"></a>Document</h3><p>代码内容的初始化，在配置的 doc 字段中配置。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> editor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EditorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> EditorState<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>basicSetup<span class=\"token punctuation\">,</span> <span class=\"token function\">javascript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">doc</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">console.log(1);</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>那如何读写 Editor 的内容呢？首先是读取：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> currentValue <span class=\"token operator\">=</span> editor<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>doc<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// `console.log(1);`</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>写入内容需要注意了，不能直接更改这个 State 配置中的 doc，这个是配置，是用来初始化的，除非你整个编辑器重新初始化的同时去修改 doc。修改内容 CM 6 采用了 dispatch 的形式，更符合数据流状态管理的设计原则。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">editor<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">changes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 从起始位置</span>\n    <span class=\"token literal-property property\">insert</span><span class=\"token operator\">:</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 插入字符 \"abc\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>经过上面的操作，我们得到的新的文本就变成了 abcconsole.log(1); 显然，大部分情况下， 我们不使用这种插入的方式，除非是在文后追加代码。常用的还是替换，或者说更改全部的内容。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> currentValue <span class=\"token operator\">=</span> editor<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>doc<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> endPosition <span class=\"token operator\">=</span> currentValue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\neditor<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">changes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> endPosition<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">insert</span><span class=\"token operator\">:</span> <span class=\"token string\">'something else'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Listen-for-Changes\"><a href=\"#Listen-for-Changes\" class=\"headerlink\" title=\"Listen for Changes\"></a>Listen for Changes</h3><p>监听编辑器内容变化也是常用的功能之一。需要监听，我们要在配置 extensions 中增加 <code>updateListener</code> 。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> EditorState<span class=\"token punctuation\">,</span> EditorView<span class=\"token punctuation\">,</span> basicSetup <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/basic-setup'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> html <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/lang-html'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> editor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EditorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> EditorState<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      basicSetup<span class=\"token punctuation\">,</span>\n      <span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      EditorView<span class=\"token punctuation\">.</span>updateListener<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>docChanged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DO SOMETHING WITH THE NEW CODE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里如果要考虑性能问题，需要加个节流。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> EditorState<span class=\"token punctuation\">,</span> EditorView<span class=\"token punctuation\">,</span> basicSetup <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/basic-setup'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> html <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/lang-html'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> timer<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> editor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EditorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> EditorState<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      basicSetup<span class=\"token punctuation\">,</span>\n      <span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      EditorView<span class=\"token punctuation\">.</span>updateListener<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>docChanged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DO SOMETHING WITH THE NEW CODE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Theme\"><a href=\"#Theme\" class=\"headerlink\" title=\"Theme\"></a>Theme</h3><p>目前可用的官方主题，除了默认的就只有一个 <code>one-dark</code> 的 theme，包名是 <code>@codemirror/theme-one-dark</code> ，在扩展中配置主题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> oneDarkTheme <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/theme-one-dark'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> editor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EditorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> EditorState<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\tbasicSetup<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token function\">javascript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\toneDarkTheme\n\t\t<span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可用的主题少的另外一个原因，CM 6 是非常容易定制化一个个性的主题的，采用了 CSS-in-JS 的写法。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> yourTheme <span class=\"token operator\">=</span> EditorView<span class=\"token punctuation\">.</span><span class=\"token function\">theme</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string-property property\">'&amp;'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#034'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'.cm-content'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">caretColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#0e9'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'&amp;.cm-focused .cm-cursor'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">borderLeftColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#0e9'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'&amp;.cm-focused .cm-selectionBackground, ::selection'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#074'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'.cm-gutters'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#045'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#ddd'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果你仅仅是想在现有的主题上进行少部分的修改，也是可以的。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 在默认主题基础上修改</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> EditorView <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@codemirror/view'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myTheme <span class=\"token operator\">=</span> EditorView<span class=\"token punctuation\">.</span><span class=\"token function\">baseTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string-property property\">'&amp;.cm-editor'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">'16px'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">'.cm-scroller'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">fontFamily</span><span class=\"token operator\">:</span>\n      <span class=\"token string\">'Consolas, Menlo, Monaco, source-code-pro, Courier New, monospace'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"Codemirror （以下简称 CM） 即将到来的新版本 CM 6，已经在其官网顶部 sticky bar 上加入了宣传链接，CM 6 是一次大的重写，并且在性能和解析等其他方面，都有极大的提升（Much-improved rewrite）。CM 6 采用了 scope 形式的...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"react","slug":"frontend/react","count":5,"path":"api/categories/frontend/react.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"react","slug":"react","count":5,"path":"api/tags/react.json"},{"name":"codemirror","slug":"codemirror","count":3,"path":"api/tags/codemirror.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Setup\"><span class=\"toc-text\">Setup</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Language\"><span class=\"toc-text\">Language</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Document\"><span class=\"toc-text\">Document</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Listen-for-Changes\"><span class=\"toc-text\">Listen for Changes</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Theme\"><span class=\"toc-text\">Theme</span></a></li></ol>","author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx CORS Configuration","uid":"194d81d78289ca046c5db02cd53b6d7d","slug":"nginx-cors","date":"2021-11-25T07:32:15.000Z","updated":"2023-01-12T09:50:07.000Z","comments":true,"path":"api/articles/nginx-cors.json","keywords":null,"cover":"https://images.unsplash.com/photo-1615309662472-4ca77a77a189?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80","text":"location / &#123; # root /usr/share/nginx/html; # index index.html index.htm; if ($request_method = 'OPTIONS') &#123; add_header 'Access-Con...","link":"","photos":[],"count_time":{"symbolsCount":999,"symbolsTime":"1 mins."},"categories":[{"name":"nginx","slug":"nginx","count":1,"path":"api/categories/nginx.json"}],"tags":[{"name":"nginx","slug":"nginx","count":1,"path":"api/tags/nginx.json"},{"name":"cors","slug":"cors","count":1,"path":"api/tags/cors.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}},"next_post":{"title":"Code Differ","uid":"bc28920ac9662d7c26811a532ee24d7f","slug":"code-differ-react","date":"2021-01-25T12:49:40.000Z","updated":"2023-01-12T09:50:07.000Z","comments":true,"path":"api/articles/code-differ-react.json","keywords":null,"cover":"https://images.unsplash.com/photo-1533893333433-7c108f745b34?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=987&q=80","text":"前置依赖（除 codemirror 外）： merge.min.js 和 merge.min.css diff_match_path.js diff/index.js /** * config compare */ import React, &#123; useState, u...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"frontend","slug":"frontend","count":13,"path":"api/categories/frontend.json"},{"name":"react","slug":"frontend/react","count":5,"path":"api/categories/frontend/react.json"}],"tags":[{"name":"frontend","slug":"frontend","count":12,"path":"api/tags/frontend.json"},{"name":"react","slug":"react","count":5,"path":"api/tags/react.json"},{"name":"codemirror","slug":"codemirror","count":3,"path":"api/tags/codemirror.json"}],"author":{"name":"Zhongkang Shen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/18032128?s=96&v=4","link":"/","description":"太阳玄烨","socials":{"github":"https://github.com/shenzhongkang","twitter":"https://twitter.com/shenzhongkang","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/shenzhongkang","zhihu":"","csdn":"https://blog.csdn.net/shenzhongkang","juejin":"","customs":{}}}}}